{"version":3,"sources":["connect.js"],"names":[],"mappings":"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","file":"connect-compiled.js","sourcesContent":["import axios from \"axios\"\nimport lsGroups from \"./lsgroups\"\n\n/**\n * Работа с сервером\n * =================\n * Здесь находятся методы для работы с сервером\n * Отсюда же происходит временное локальное сохранение\n * в localStorage для последующей передачи\n * TODO Заглушка для тестирования\n * TODO Работа с сетью:\n * - загрузка персональных заданий\n * - Загрузка текстовых сообщений\n * - сохранение статистики\n * TODO Исправить ошибки по работе с localStorage\n */\n\nconst LSNAME = \"fracMenu\";  // Название набора данных из lsGroups\nconst STATISTIC = \"stat\";   // Название элемента из localStorage,\n                            // в котором хранится статистика\n\nlet exercisesStub = [\n  {\n    _id: 2424242,\n    name: \"Первый\",\n    component: \"ReduceSimple\",\n    showRight: true,\n    fraction: {\n      num: {min: 1, max: 9},\n      denom: {min: 1, max: 2},\n      whole: {min: -9, max: 9},\n      coef: {min: 1, max: 2},\n      x: {min: 0, max: 5},\n      y: {min: 0, max: 9}\n    }\n  },\n  {\n    _id: 2424267,\n    name: \"Второй\",\n    component: \"ReduceSimple\",\n    showRight: true,\n    fraction: {\n      num: {min: 1, max: 9},\n      denom: {min: 1, max: 2},\n      whole: {min: -9, max: 9},\n      coef: {min: 1, max: 2},\n      x: {min: 0, max: 5},\n      y: {min: 0, max: 9}\n    }\n  },\n];\nlet statisticStub=[];\nexport default {\n  async loadExercises(params){\n      // Заглушка\n      if(params.stub){\n        return await exercisesStub\n      }\n\n      // Загрузка из localStorage\n      if(params.local)\n        return lsGroups.read(LSNAME);\n  },\n  async saveExercise(params){\n    return lsGroups.write(LSNAME,params);\n\n  },\n\n  async updateExercises(num,value){\n    lsGroups.update(LSNAME,num,value);\n    return true\n  },\n  async deleteExercises(id){\n    return lsGroups.del(LSNAME,id);\n\n  },\n\n  async loadStatistic(){\n    let data = localStorage[STATISTIC];\n    if(data === undefined) return [];\n    return JSON.parse(data)\n  },\n\n  /**\n   * Отправка на сервер статистики или сохранение ее в localStorage\n   * @param el\n   * @param collection\n   */\n  async pushStatistic(el,collection){\n    localStorage[STATISTIC] = JSON.stringify(collection)\n  }\n}\n"]}
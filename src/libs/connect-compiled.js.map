{"version":3,"sources":["connect.js"],"names":[],"mappings":"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","file":"connect-compiled.js","sourcesContent":["import axios from \"axios\"\nimport lsGroups from \"./lsgroups\"\n\n/**\n * Работа с сервером\n * =================\n * Здесь находятся методы для работы с сервером\n * Отсюда же происходит временное локальное сохранение\n * в localStorage для последующей передачи\n * TODO Заглушка для тестирования\n * TODO Работа с сетью:\n * - загрузка персональных заданий\n * - Загрузка текстовых сообщений\n * - сохранение статистики\n * TODO Исправить ошибки по работе с localStorage\n */\n\nconst LSNAME = \"fracMenu\";  // Название набора данных из lsGroups\nconst STATISTIC = \"stat\";   // Название элемента из localStorage,\n                            // в котором хранится статистика\nlet exercises;              // В этой переменной сохранен объект, управляющий localStorage\n\nlet exercisesStub = [\n  {\n    _id: 2424242,\n    name: \"Первый\",\n    component: \"ReduceSimple\",\n    showRight: true,\n    fraction: {\n      num: {min: 1, max: 9},\n      denom: {min: 1, max: 2},\n      whole: {min: -9, max: 9},\n      coef: {min: 1, max: 2},\n      x: {min: 0, max: 5},\n      y: {min: 0, max: 9}\n    }\n  },\n  {\n    _id: 2424267,\n    name: \"Второй\",\n    component: \"ReduceSimple\",\n    showRight: true,\n    fraction: {\n      num: {min: 1, max: 9},\n      denom: {min: 1, max: 2},\n      whole: {min: -9, max: 9},\n      coef: {min: 1, max: 2},\n      x: {min: 0, max: 5},\n      y: {min: 0, max: 9}\n    }\n  },\n];\nlet statisticStub=[];\nexport default {\n  async loadExercises(params){\n      // Заглушка\n      if(params.stub){\n        return await exercisesStub\n      }\n\n      // Загрузка из localStorage\n      if(params.local){\n        exercises = new lsGroups.Element(LSNAME);\n        return exercises.getAll()\n      }\n\n  },\n  async saveExercise(params){\n    let id = Date.now();\n    exercises.set(id,params);\n    return id\n\n  },\n\n  async updateExercises(num,value){\n    exercises.set(num,value);\n    return true\n  },\n\n  async deleteExercises(id){\n    exercises.del(id);\n    return true\n  },\n\n  async deleteAllExercises(){\n    exercises.delAll();\n    return true;\n  },\n\n  async loadStatistic(){\n    let data = localStorage[STATISTIC];\n    if(data === undefined) return [];\n    return JSON.parse(data)\n  },\n\n  /**\n   * Отправка на сервер статистики или сохранение ее в localStorage\n   * @param el\n   * @param collection\n   */\n  async pushStatistic(el,collection){\n    localStorage[STATISTIC] = JSON.stringify(collection)\n  },\n  delStatistic(){\n    delete localStorage[STATISTIC]\n  }\n}\n"]}